-- Create weekly, monthly and yearly store statistics tables
CREATE TABLE IF NOT EXISTS tb_store_statistics_weekly (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id BIGINT NOT NULL REFERENCES tb_stores(id) ON DELETE CASCADE,
    period_year INT NOT NULL,
    period_number INT NOT NULL,
    sent INT NOT NULL DEFAULT 0,
    delivered INT NOT NULL DEFAULT 0,
    returned INT NOT NULL DEFAULT 0,
    sum_delivery_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    sum_pickup_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    updated_at TIMESTAMP
);
CREATE INDEX IF NOT EXISTS idx_store_stats_weekly ON tb_store_statistics_weekly(store_id, period_year, period_number);

CREATE TABLE IF NOT EXISTS tb_store_statistics_monthly (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id BIGINT NOT NULL REFERENCES tb_stores(id) ON DELETE CASCADE,
    period_year INT NOT NULL,
    period_number INT NOT NULL,
    sent INT NOT NULL DEFAULT 0,
    delivered INT NOT NULL DEFAULT 0,
    returned INT NOT NULL DEFAULT 0,
    sum_delivery_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    sum_pickup_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    updated_at TIMESTAMP
);
CREATE INDEX IF NOT EXISTS idx_store_stats_monthly ON tb_store_statistics_monthly(store_id, period_year, period_number);

CREATE TABLE IF NOT EXISTS tb_store_statistics_yearly (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id BIGINT NOT NULL REFERENCES tb_stores(id) ON DELETE CASCADE,
    period_year INT NOT NULL,
    period_number INT NOT NULL,
    sent INT NOT NULL DEFAULT 0,
    delivered INT NOT NULL DEFAULT 0,
    returned INT NOT NULL DEFAULT 0,
    sum_delivery_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    sum_pickup_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    updated_at TIMESTAMP
);
CREATE INDEX IF NOT EXISTS idx_store_stats_yearly ON tb_store_statistics_yearly(store_id, period_year, period_number);

-- Create weekly, monthly and yearly postal service statistics tables
CREATE TABLE IF NOT EXISTS tb_postal_service_statistics_weekly (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id BIGINT NOT NULL REFERENCES tb_stores(id) ON DELETE CASCADE,
    postal_service_type VARCHAR(50) NOT NULL,
    period_year INT NOT NULL,
    period_number INT NOT NULL,
    sent INT NOT NULL DEFAULT 0,
    delivered INT NOT NULL DEFAULT 0,
    returned INT NOT NULL DEFAULT 0,
    sum_delivery_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    sum_pickup_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    updated_at TIMESTAMP
);
CREATE INDEX IF NOT EXISTS idx_postal_stats_weekly ON tb_postal_service_statistics_weekly(store_id, postal_service_type, period_year, period_number);

CREATE TABLE IF NOT EXISTS tb_postal_service_statistics_monthly (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id BIGINT NOT NULL REFERENCES tb_stores(id) ON DELETE CASCADE,
    postal_service_type VARCHAR(50) NOT NULL,
    period_year INT NOT NULL,
    period_number INT NOT NULL,
    sent INT NOT NULL DEFAULT 0,
    delivered INT NOT NULL DEFAULT 0,
    returned INT NOT NULL DEFAULT 0,
    sum_delivery_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    sum_pickup_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    updated_at TIMESTAMP
);
CREATE INDEX IF NOT EXISTS idx_postal_stats_monthly ON tb_postal_service_statistics_monthly(store_id, postal_service_type, period_year, period_number);

CREATE TABLE IF NOT EXISTS tb_postal_service_statistics_yearly (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id BIGINT NOT NULL REFERENCES tb_stores(id) ON DELETE CASCADE,
    postal_service_type VARCHAR(50) NOT NULL,
    period_year INT NOT NULL,
    period_number INT NOT NULL,
    sent INT NOT NULL DEFAULT 0,
    delivered INT NOT NULL DEFAULT 0,
    returned INT NOT NULL DEFAULT 0,
    sum_delivery_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    sum_pickup_days NUMERIC(12,2) NOT NULL DEFAULT 0.0,
    updated_at TIMESTAMP
);
CREATE INDEX IF NOT EXISTS idx_postal_stats_yearly ON tb_postal_service_statistics_yearly(store_id, postal_service_type, period_year, period_number);
