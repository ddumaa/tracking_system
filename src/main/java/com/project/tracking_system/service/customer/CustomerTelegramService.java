package com.project.tracking_system.service.customer;

import com.project.tracking_system.dto.CustomerTelegramLinkDTO;
import com.project.tracking_system.entity.*;
import com.project.tracking_system.mapper.BuyerStatusMapper;
import com.project.tracking_system.repository.CustomerNotificationLogRepository;
import com.project.tracking_system.repository.CustomerTelegramLinkRepository;
import com.project.tracking_system.repository.TrackParcelRepository;
import com.project.tracking_system.service.telegram.TelegramNotificationService;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.util.List;
import java.util.Optional;

import com.project.tracking_system.utils.PhoneUtils;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * –°–µ—Ä–≤–∏—Å –ø—Ä–∏–≤—è–∑–∫–∏ Telegram-—á–∞—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º.
 */
@Service
@RequiredArgsConstructor
@Slf4j
public class CustomerTelegramService {

    private final CustomerTelegramLinkRepository linkRepository;
    private final CustomerService customerService;
    private final TrackParcelRepository trackParcelRepository;
    private final CustomerNotificationLogRepository notificationLogRepository;
    private final TelegramNotificationService telegramNotificationService;

    /**
     * –ü—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç Telegram –∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
     * <p>
     * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç—Å—è –¥–æ —Ñ–æ—Ä–º–∞—Ç–∞ 375XXXXXXXXX. –ï—Å–ª–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å
     * —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞
     * –Ω–æ–≤–∞—è –ø—Ä–∏–≤—è–∑–∫–∞. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å.
     * –î–ª—è –Ω–æ–≤—ã—Ö —Å–≤—è–∑–µ–π —Ñ–ª–∞–≥–∏ {@code telegramConfirmed} –∏
     * {@code notificationsEnabled} —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –≤ {@code true}.
     * –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ —É–∂–µ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.
     * </p>
     *
     * @param phone  –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ Telegram
     * @return —Å–æ–∑–¥–∞–Ω–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ Telegram
     */
    @Transactional
    public CustomerTelegramLink linkTelegramToCustomer(String phone, Long chatId) {
        String normalized = PhoneUtils.normalizePhone(phone);
        log.info("üîó –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {} –∫ —á–∞—Ç—É {}", normalized, chatId);

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        Customer customer = customerService.registerOrGetByPhone(normalized);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø—Ä–∏–≤—è–∑–∫—É
        Optional<CustomerTelegramLink> existing = linkRepository.findByTelegramChatId(chatId);
        if (existing.isPresent()) {
            log.warn("‚ö†Ô∏è –ß–∞—Ç {} —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é {}", chatId, existing.get().getCustomer().getId());
            return existing.get();
        }

        CustomerTelegramLink link = new CustomerTelegramLink();
        link.setCustomer(customer);
        link.setTelegramChatId(chatId);
        link.setLinkedAt(ZonedDateTime.now(ZoneOffset.UTC));
        link.setTelegramConfirmed(true);
        link.setNotificationsEnabled(true);

        CustomerTelegramLink saved = linkRepository.save(link);
        log.info("‚úÖ –ß–∞—Ç {} –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é {}", chatId, customer.getId());
        return saved;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –∫ –º–∞–≥–∞–∑–∏–Ω—É –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
     * <p>
     * –ï—Å–ª–∏ –ø—Ä–∏–≤—è–∑–∫–∞ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è chatId
     * –∏ –¥–∞—Ç–∞ –ø—Ä–∏–≤—è–∑–∫–∏. –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–º Telegram
     * –∏ –≤–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏.
     * </p>
     *
     * @param phone  –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
     * @param store  –º–∞–≥–∞–∑–∏–Ω, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤—è–∑–∫–∞
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ Telegram
     * @return —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞
     */
    @Transactional
    public CustomerTelegramLink linkTelegramToCustomer(String phone, Store store, Long chatId) {
        String normalized = PhoneUtils.normalizePhone(phone);
        log.info("üîó –ü—Ä–∏–≤—è–∑–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {} –∫ —á–∞—Ç—É {} –≤ –º–∞–≥–∞–∑–∏–Ω–µ {}", normalized, chatId,
                store != null ? store.getId() : null);

        Customer customer = customerService.registerOrGetByPhone(normalized);

        Optional<CustomerTelegramLink> existing = Optional.empty();
        if (store != null) {
            existing = linkRepository.findByCustomerIdAndStoreId(customer.getId(), store.getId());
        }

        CustomerTelegramLink link = existing.orElseGet(CustomerTelegramLink::new);
        link.setCustomer(customer);
        link.setStore(store);
        link.setTelegramChatId(chatId);
        link.setLinkedAt(ZonedDateTime.now(ZoneOffset.UTC));

        if (existing.isEmpty()) {
            link.setTelegramConfirmed(true);
            link.setNotificationsEnabled(true);
        }

        CustomerTelegramLink saved = linkRepository.save(link);
        log.info("‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è {} –∏ –º–∞–≥–∞–∑–∏–Ω–∞ {}", customer.getId(),
                store != null ? store.getId() : null);
        return saved;
    }

    /**
     * –ù–∞–π—Ç–∏ –ø—Ä–∏–≤—è–∑–∫—É –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É Telegram-—á–∞—Ç–∞.
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @return –Ω–∞–π–¥–µ–Ω–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∏–ª–∏ {@link java.util.Optional#empty()}
     */
    @Transactional(readOnly = true)
    public Optional<CustomerTelegramLink> findByChatId(Long chatId) {
        if (chatId == null) {
            return Optional.empty();
        }
        return linkRepository.findByTelegramChatId(chatId);
    }

    /**
     * –ù–∞–π—Ç–∏ –ø—Ä–∏–≤—è–∑–∫—É –ø–æ —á–∞—Ç—É –∏ –º–∞–≥–∞–∑–∏–Ω—É.
     *
     * @param chatId  –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param storeId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞
     * @return –Ω–∞–π–¥–µ–Ω–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∏–ª–∏ {@link java.util.Optional#empty()}
     */
    @Transactional(readOnly = true)
    public Optional<CustomerTelegramLink> findByChatIdAndStore(Long chatId, Long storeId) {
        if (chatId == null || storeId == null) {
            return Optional.empty();
        }
        return linkRepository.findByTelegramChatIdAndStoreId(chatId, storeId);
    }

    /**
     * –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–≤—è–∑–∫–µ Telegram.
     *
     * @param link –ø—Ä–∏–≤—è–∑–∫–∞ Telegram
     * @return –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞
     */
    @Transactional
    public CustomerTelegramLink confirmTelegram(CustomerTelegramLink link) {
        if (link == null) {
            throw new IllegalArgumentException("–ü—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞");
        }
        if (!link.isTelegramConfirmed()) {
            link.setTelegramConfirmed(true);
            link = linkRepository.save(link);
            log.info("‚úÖ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å {} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª Telegram", link.getCustomer().getId());
        }
        return link;
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—ã–ª–æ–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –ø–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ Telegram.
     * <p>
     * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –≤—Å–µ –ø–æ—Å—ã–ª–∫–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –≤ –Ω–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–∞—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
     * —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –µ—â—ë –Ω–µ
     * –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ä–∞–Ω–µ–µ.
     * </p>
     *
     * @param link –ø—Ä–∏–≤—è–∑–∫–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∫ Telegram
     */
    @Transactional
    public void notifyActualStatuses(CustomerTelegramLink link) {
        if (link == null || link.getCustomer() == null) {
            return;
        }

        Customer customer = link.getCustomer();

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        List<CustomerTelegramLink> activeLinks = linkRepository
                .findByCustomerIdAndTelegramConfirmedTrueAndNotificationsEnabledTrue(customer.getId());

        for (CustomerTelegramLink activeLink : activeLinks) {
            Store store = activeLink.getStore();
            if (store == null) {
                continue;
            }

            StoreTelegramSettings settings = store.getTelegramSettings();
            if (settings != null && !settings.isEnabled()) {
                continue;
            }

            List<TrackParcel> parcels = trackParcelRepository.findActiveByCustomerIdAndStoreId(
                    customer.getId(),
                    store.getId(),
                    List.of(GlobalStatus.DELIVERED, GlobalStatus.RETURNED)
            );

            for (TrackParcel parcel : parcels) {
                GlobalStatus status = parcel.getStatus();

                if (notificationLogRepository.existsByParcelIdAndStatusAndNotificationType(
                        parcel.getId(), status, NotificationType.INSTANT)) {
                    continue;
                }

                BuyerStatus buyerStatus = BuyerStatusMapper.map(status);
                if (buyerStatus == null) {
                    continue; // —Å—Ç–∞—Ç—É—Å –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é
                }

                telegramNotificationService.sendStatusUpdate(parcel, status);

                CustomerNotificationLog logEntry = new CustomerNotificationLog();
                logEntry.setCustomer(customer);
                logEntry.setParcel(parcel);
                logEntry.setStatus(status);
                logEntry.setNotificationType(NotificationType.INSTANT);
                logEntry.setSentAt(ZonedDateTime.now(ZoneOffset.UTC));
                notificationLogRepository.save(logEntry);
            }
        }
    }

    /**
     * –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–µ.
     *
     * @param chatId  –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä Telegram-—á–∞—Ç–∞
     * @param storeId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞
     * @return {@code true}, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã
     */
    @Transactional
    public boolean disableNotifications(Long chatId, Long storeId) {
        if (chatId == null || storeId == null) {
            return false;
        }

        return linkRepository.findByTelegramChatIdAndStoreId(chatId, storeId)
                .filter(CustomerTelegramLink::isNotificationsEnabled)
                .map(link -> {
                    link.setNotificationsEnabled(false);
                    linkRepository.save(link);
                    log.info("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è {} –≤ –º–∞–≥–∞–∑–∏–Ω–µ {}",
                            link.getCustomer().getId(), storeId);
                    return true;
                })
                .orElse(false);
    }

    /**
     * –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ.
     *
     * @param chatId  –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä Telegram-—á–∞—Ç–∞
     * @param storeId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞
     * @return {@code true}, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—ã–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã
     */
    @Transactional
    public boolean enableNotifications(Long chatId, Long storeId) {
        if (chatId == null || storeId == null) {
            return false;
        }

        return linkRepository.findByTelegramChatIdAndStoreId(chatId, storeId)
                .filter(link -> !link.isNotificationsEnabled())
                .map(link -> {
                    link.setNotificationsEnabled(true);
                    linkRepository.save(link);
                    log.info("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è {} –≤ –º–∞–≥–∞–∑–∏–Ω–µ {}",
                            link.getCustomer().getId(), storeId);
                    return true;
                })
                .orElse(false);
    }

    /**
     * –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø—Ä–∏–≤—è–∑–∫–∞–º —á–∞—Ç–∞ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏).
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @return {@code true}, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –ø—Ä–∏–≤—è–∑–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞
     */
    @Transactional
    public boolean disableNotifications(Long chatId) {
        if (chatId == null) {
            return false;
        }

        boolean[] result = {false};
        linkRepository.findByTelegramChatId(chatId).ifPresent(link -> {
            link.setNotificationsEnabled(false);
            linkRepository.save(link);
            log.info("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è {}", link.getCustomer().getId());
            result[0] = true;
        });
        return result[0];
    }

    /**
     * –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø—Ä–∏–≤—è–∑–∫–∞–º —á–∞—Ç–∞ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏).
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @return {@code true}, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –ø—Ä–∏–≤—è–∑–∫–∞ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞
     */
    @Transactional
public boolean enableNotifications(Long chatId) {
        if (chatId == null) {
            return false;
        }

        boolean[] result = {false};
        linkRepository.findByTelegramChatId(chatId).ifPresent(link -> {
            link.setNotificationsEnabled(true);
            linkRepository.save(link);
            log.info("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è {}", link.getCustomer().getId());
            result[0] = true;
        });
        return result[0];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—è–∑–æ–∫ Telegram –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞.
     *
     * @param storeId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞
     * @return —Å–ø–∏—Å–æ–∫ DTO –ø—Ä–∏–≤—è–∑–æ–∫
     */
    @Transactional(readOnly = true)
    public List<CustomerTelegramLinkDTO> getLinksByStore(Long storeId) {
        if (storeId == null) {
            return List.of();
        }
        return linkRepository.findByStoreId(storeId).stream()
                .map(this::toDto)
                .toList();
    }

    /**
     * –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ.
     *
     * @param linkId  –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–≤—è–∑–∫–∏
     * @param storeId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞
     * @param enabled –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     * @return {@code true}, –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
     */
    @Transactional
    public boolean setNotificationsEnabled(Long linkId, Long storeId, boolean enabled) {
        if (linkId == null || storeId == null) {
            return false;
        }

        return linkRepository.findById(linkId)
                .filter(link -> link.getStore() != null && link.getStore().getId().equals(storeId))
                .map(link -> {
                    link.setNotificationsEnabled(enabled);
                    linkRepository.save(link);
                    log.info("{} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è {} –≤ –º–∞–≥–∞–∑–∏–Ω–µ {}", enabled ? "üîî –í–∫–ª—é—á–µ–Ω—ã" : "üîï –û—Ç–∫–ª—é—á–µ–Ω—ã",
                            link.getCustomer().getId(), storeId);
                    return true;
                })
                .orElse(false);
    }

    private CustomerTelegramLinkDTO toDto(CustomerTelegramLink link) {
        CustomerTelegramLinkDTO dto = new CustomerTelegramLinkDTO();
        dto.setId(link.getId());
        dto.setPhone(link.getCustomer().getPhone());
        dto.setTelegramChatId(link.getTelegramChatId());
        dto.setTelegramConfirmed(link.isTelegramConfirmed());
        dto.setNotificationsEnabled(link.isNotificationsEnabled());
        return dto;
    }

}
