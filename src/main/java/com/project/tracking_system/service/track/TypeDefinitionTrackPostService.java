package com.project.tracking_system.service.track;

import com.project.tracking_system.dto.TrackInfoListDTO;
import com.project.tracking_system.entity.PostalServiceType;
import com.project.tracking_system.mapper.JsonEvroTrackingResponseMapper;
import com.project.tracking_system.model.evropost.jsonResponseModel.JsonEvroTrackingResponse;
import com.project.tracking_system.service.belpost.WebBelPostBatchService;
import com.project.tracking_system.service.jsonEvropostService.JsonEvroTrackingService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import java.util.Map;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ExecutionException;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ—á—Ç–æ–≤—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π.
 * <p>
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—ã–ª–∫–∞—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
 * –í–∫–ª—é—á–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–¥–æ–≤ –ø–æ—Å—ã–ª–æ–∫ –∏
 * –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏ WebBelPostBatchService –∏ EuroPost.
 * </p>
 *
 * @author Dmitriy Anisimov
 * @date –î–æ–±–∞–≤–ª–µ–Ω–Ω–æ 07.01.2025
 */
@RequiredArgsConstructor
@Slf4j
@Service
public class TypeDefinitionTrackPostService {

    private final WebBelPostBatchService webBelPostBatchService;
    private final JsonEvroTrackingService jsonEvroTrackingService;
    private final JsonEvroTrackingResponseMapper jsonEvroTrackingResponseMapper;

    private final Map<String, Object> trackLocks = new ConcurrentHashMap<>();

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ—á—Ç–æ–≤—É—é —Å–ª—É–∂–±—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–∞.
     * <p>–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç {@link PostalServiceType#UNKNOWN}, –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç.</p>
     */
    public PostalServiceType detectPostalService(String number) {
        // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω –∏–ª–∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤, —Å—á–∏—Ç–∞–µ–º —Å–ª—É–∂–±—É –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π
        if (number == null || number.isBlank()) {
            return PostalServiceType.UNKNOWN;
        }

        if (number.matches("^(PC|BV|BP|PE)\\d{9}BY$")) {
            return PostalServiceType.BELPOST;
        }
        if (number.matches("^BY\\d{12}$")) {
            return PostalServiceType.EVROPOST;
        }
        return PostalServiceType.UNKNOWN;
    }

    /**
     * –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ—Å—ã–ª–∫–∏ –ø–æ –Ω–æ–º–µ—Ä—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
     *
     * @param number –Ω–æ–º–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å—ã–ª–∫–∏
     * @return –æ–±—ä–µ–∫—Ç {@link CompletableFuture} —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
     * @throws IllegalArgumentException –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
     */
    @Async("Post")
    public CompletableFuture<TrackInfoListDTO> getTypeDefinitionTrackPostServiceAsync(Long userId, String number) {
        // –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è @Async –≤—ã–ø–æ–ª–Ω—è–µ—Ç –º–µ—Ç–æ–¥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –ø–æ—ç—Ç–æ–º—É –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π supplyAsync –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
        PostalServiceType postalService = detectPostalService(number);

        log.info("üì¶ –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç—Ä–µ–∫—É: {} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID={})", number, userId);
        log.debug("üîé –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—á—Ç–æ–≤—É—é —Å–ª—É–∂–±—É: {} ‚Üí {}", number, postalService);

        TrackInfoListDTO result;
        try {
            switch (postalService) {
                case BELPOST:
                    log.info("üì® –ó–∞–ø—Ä–æ—Å –∫ –ë–µ–ª–ø–æ—á—Ç–µ –¥–ª—è –Ω–æ–º–µ—Ä–∞: {}", number);
                    result = webBelPostBatchService.parseTrack(number);
                    break;
                case EVROPOST:
                    log.info("üì® –ó–∞–ø—Ä–æ—Å –∫ –ï–≤—Ä–æ–ø–æ—á—Ç–µ –¥–ª—è –Ω–æ–º–µ—Ä–∞: {}", number);
                    JsonEvroTrackingResponse json = jsonEvroTrackingService.getJson(userId, number);
                    result = jsonEvroTrackingResponseMapper.mapJsonEvroTrackingResponseToDTO(json);
                    break;
                default:
                    log.warn("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–∞: {} (UNKNOWN)", number);
                    throw new IllegalArgumentException("–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–¥ –ø–æ—Å—ã–ª–∫–∏: " + number);
            }
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–∞ {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {}: {}", number, userId, e.getMessage(), e);
            result = new TrackInfoListDTO();
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ —É–∂–µ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π CompletableFuture
        return CompletableFuture.completedFuture(result);
    }


    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ—Å—ã–ª–∫–∏.
     * <p>
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
     * </p>
     *
     * @param number –Ω–æ–º–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å—ã–ª–∫–∏
     * @return –æ–±—ä–µ–∫—Ç {@link TrackInfoListDTO} —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ—Å—ã–ª–∫–∏
     * @throws IllegalArgumentException –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
     */
    public TrackInfoListDTO getTypeDefinitionTrackPostService(Long userId, String number) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –æ–¥–Ω–æ–º—É —Ç—Ä–µ–∫—É
        Object lock = trackLocks.computeIfAbsent(number, key -> new Object());

        synchronized (lock) {
            try {
                log.info("‚è≥ [LOCKED] –ó–∞–ø—Ä–æ—Å (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π) –¥–ª—è —Ç—Ä–µ–∫–∞: {} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID={})", number, userId);
                return getTypeDefinitionTrackPostServiceAsync(userId, number).get();
            } catch (ExecutionException | InterruptedException e) {
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ç—Ä–µ–∫—É {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {}: {}", number, userId, e.getMessage(), e);
                Thread.currentThread().interrupt();
                return new TrackInfoListDTO();
            } finally {
                trackLocks.remove(number); // –æ—á–∏—â–∞–µ–º –º–∞–ø—É
            }
        }
    }

}