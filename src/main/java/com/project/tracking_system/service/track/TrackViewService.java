package com.project.tracking_system.service.track;

import com.project.tracking_system.dto.TrackInfoDTO;
import com.project.tracking_system.dto.TrackInfoListDTO;
import com.project.tracking_system.dto.TrackViewResult;
import com.project.tracking_system.entity.TrackParcel;
import com.project.tracking_system.service.admin.ApplicationSettingsService;
import com.project.tracking_system.service.user.UserService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.access.AccessDeniedException;
import jakarta.persistence.EntityNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

/**
 * –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—ã–ª–∫–µ.
 * <p>
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ç—Ä–µ–∫ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å,
 * –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –µ–≥–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è.
 * </p>
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class TrackViewService {

    private final TrackParcelService trackParcelService;
    private final TrackUpdateDispatcherService trackUpdateDispatcherService;
    private final TrackProcessingService trackProcessingService;
    private final UserService userService;
    private final ApplicationSettingsService applicationSettingsService;

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—ã–ª–∫–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.
     * <p>
     * –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–≤–Ω–æ, —Ç—Ä–µ–∫ –±—É–¥–µ—Ç
     * –æ–±–Ω–æ–≤–ª—ë–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤–µ—Ä–Ω—ë—Ç—Å—è —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     * –∏ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
     * </p>
     *
     * @param itemNumber –Ω–æ–º–µ—Ä –ø–æ—Å—ã–ª–∫–∏
     * @param userId     –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return –æ–±—ä–µ–∫—Ç —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–µ–∫–∞ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     * @throws AccessDeniedException    –µ—Å–ª–∏ –ø–æ—Å—ã–ª–∫–∞ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     * @throws EntityNotFoundException  –µ—Å–ª–∏ –ø–æ—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
     */
    @Transactional
    public TrackViewResult getTrackDetails(String itemNumber, Long userId) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –ø–æ—Å—ã–ª–∫–∏
        if (!trackParcelService.userOwnsParcel(itemNumber, userId)) {
            log.warn("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID={} –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å —á—É–∂–æ–π —Ç—Ä–µ–∫ {}", userId, itemNumber);
            throw new AccessDeniedException("–ü–æ—Å—ã–ª–∫–∞ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é");
        }

        TrackParcel parcel = trackParcelService.findByNumberAndUserId(itemNumber, userId);
        if (parcel == null) {
            throw new EntityNotFoundException("–ü–æ—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
        }

        int interval = applicationSettingsService.getTrackUpdateIntervalHours();
        ZonedDateTime nowUtc = ZonedDateTime.now(ZoneOffset.UTC);
        ZonedDateTime nextAllowed = parcel.getLastUpdate().plusHours(interval);
        // –ü–æ—Å—ã–ª–∫—É –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –µ—â—ë –Ω–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∏ —Å –º–æ–º–µ–Ω—Ç–∞
        // –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏
        boolean canUpdate = !parcel.getStatus().isFinal()
                && (parcel.getLastUpdate() == null
                || parcel.getLastUpdate().isBefore(nowUtc.minusHours(interval)));

        TrackInfoListDTO trackInfo;
        String nextUpdateTime = null;
        if (canUpdate) {
            TrackMeta meta = new TrackMeta(itemNumber, null, null, false,
                    trackParcelService.getPostalServiceType(itemNumber));
            trackInfo = trackUpdateDispatcherService.dispatch(meta).getTrackInfo();
            trackProcessingService.save(itemNumber, trackInfo, parcel.getStore().getId(), userId);
            log.info("üéØ –ü–µ—Ä–µ–¥–∞–Ω–æ {} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ç—Ä–µ–∫–∞ {}", trackInfo.getList().size(), itemNumber);
        } else {
            trackInfo = new TrackInfoListDTO();
            String ts = parcel.getTimestamp()
                    .withZoneSameInstant(userService.getUserZone(userId))
                    .format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss"));
            trackInfo.addTrackInfo(new TrackInfoDTO(ts, parcel.getStatus().getDescription()));
            nextUpdateTime = nextAllowed.withZoneSameInstant(userService.getUserZone(userId))
                    .format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss"));
        }

        return new TrackViewResult(trackInfo, nextUpdateTime);
    }
}
